name: Build

on:
  push:
  pull_request:

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install dependencies (Linux)
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential libjson-c-dev make

      - name: Install dependencies (Windows)
        if: runner.os == 'Windows'
        run: |
          choco install make mingw cmake --no-progress
          git clone https://github.com/json-c/json-c.git
          cd json-c
          mkdir build
          cd build
          cmake .. -G "MinGW Makefiles"
          cmake --build . --config Release
          cmake --install .

      - name: Build using Makefile
        run: make

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: trainer-${{ runner.os }}
          path: |
            trainer
            trainer.exe
